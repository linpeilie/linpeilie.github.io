<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[重装系统后快速配置Hexo]]></title>
    <url>%2Fcontent%2F2018%2F02%2F03%2F%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8E%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AEHexo.html</url>
    <content type="text"><![CDATA[安装git nodeGitNode.js 配置SSH keys生成新的SSH keys： 123456789101112131415161718192021$ ssh-keygen -t rsa -C 1912599989@qq.comGenerating public/private rsa key pair.Enter file in which to save the key (/c/Users/linpeilie/.ssh/id_rsa): #这里是存放位置，如果无需改动则直接回车Enter passphrase (empty for no passphrase): #这里提示输入密码，密码是为了防止别人通过这个ssh往你的项目中提交内容，无需设置的话可以直接回车Enter same passphrase again: #再次输入密码Your identification has been saved in /c/Users/linpeilie/.ssh/id_rsa.Your public key has been saved in /c/Users/linpeilie/.ssh/id_rsa.pub.The key fingerprint is:SHA256:S48zNMYnmqLEeLFktl0P+DB3WSdWJoD9JQF0WxdTgoo 1912599989@qq.comThe key&apos;s randomart image is:+---[RSA 2048]----+| ++o+.+.=o.|| . ...*o. o || o=+. || . .E+oo || = + + S . || * = * X B ||. * o + * . || o . . o || . |+----[SHA256]-----+ 添加SSH keys到GitHub1.找到刚才生成的id_rsa.pub文件，打开复制所有内容；2.登录github，点击右上角，点击Settings–&gt;SSH and GPG keys–&gt;New SSH key，粘贴后保存； 测试12$ ssh -T git@github.comHi linpeilie! You&apos;ve successfully authenticated, but GitHub does not provide shell access.]]></content>
  </entry>
  <entry>
    <title><![CDATA[Deepin记录]]></title>
    <url>%2Fcontent%2F2018%2F01%2F24%2FDeepin%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[软件安装 及其 配置1.shadowsocks-qt5可直接在deepin商店中下载，或者在命令行中输入： sudo apt-get install shadowsocks-qt5 在安装后配置好成功后，还不能科学上网，解决方法：设置–网络–系统代理–手动–Socks代理中，地址填写127.0.0.1，端口1080，点击确定，即可使用 或者下载某大佬写的按照Windows版本的Shadowsocks写的软件，链接https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=142900 2.jdk1.7安装a.下载可直接在 Oracle官网下载相应版本即可 b.解压为了方便管理，将解压后的文件移至另一目录下 $ sudo mkdir /usr/lib/jvm $ sudo mv jdk-7u80-linux-x64.tar.gz /usr/lib/jvm 解压 $ sudo tar zxvf ./jdk-7u80-linux-x64.tar.gz c.配置环境变量得到jdk目录 $ cd jdk1.7.0_80/ $ pwd /usr/lib/jvm/jdk1.7.0_80 编辑用户主目录下的.bashrc文件 # java export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_80 export CLASSPATH=${JAVA_HOME}/lib export PATH=${JAVA_HOME}/bin:$PATH 使配置生效 source ~/.bashrc 验证 $ java -version Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=gasp java version &quot;1.7.0_80&quot; Java(TM) SE Runtime Environment (build 1.7.0_80-b15) Java HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode) 快捷键命令查看系统信息 &nbsp; 命令 查看系统版本 cat /etc/deepin-version 查看内核版本 uname -a 查看软件源信息 cat /etc/apt/sources.list 安装、卸载软件 查找软件 以java为例： $ sudo apt-cache search java 安装软件最优先考虑的是去软件官网找安装包和安装方法，因为官网的安装包和安装方法介绍是最新的，其次才是网上搜索安装包和安装教程。Deepin基于Debian，故选择安装包的先后顺序是：1.For Debian2.For Ubuntu3..deb后缀的4.需要添加私有源的5..tar.gz.tgz.zip之类压缩包格式的 安装软件 $ sudo apt-get install oracle-java8 卸载软件 $ sudo apt-get uninstall oracle-java8 解决依赖问题 $ sudo apt-get install -f .deb后缀软件安装 首先可以直接双击安装或者使用命令： $ dpkg -i /home/linpeilie/Downloads/***.deb 添加私有源 第一次使用add-apt-repository的，需要 $ sudo apt-get install python-software-properties $ sudo apt-get install software-properties-common $ sudo apt-get update 添加源 $ sudo add-apt-repository ppa:xxx/xxx $ sudo apt-get update $ sudo apt-get install xxx 注：当添加源之后，每次apt-get update 可能会因为私有源的问题导致更新慢故可采用如下命令删除添加的源： $ sudo add-apt-repository -r ppa:/usr/ppa-name $ rm -rf /etc/apt/sources.list.d/&lt;相应ppa源的保存文件&gt;.list 设置更换镜像源# Deepin 配置阿里云镜像源 echo -e &quot;deb [by-hash=force] http://mirrors.aliyun.com/deepin unstable main contrib non-free \ndeb-src http://mirrors.aliyun.com/deepin unstable main contrib non-free&quot; | sudo tee /etc/apt/sources.list # Deepin 配置中科大镜像源 echo -e &quot;deb [by-hash=force] http://mirrors.ustc.edu.cn/deepin unstable main contrib non-free \ndeb-src http://mirrors.ustc.edu.cn/deepin unstable main contrib non-free&quot; | sudo tee /etc/apt/sources.list 开启metacity窗管合成 如果觉得关闭特效不好看，可以使用：deepin-metacity --composite --replace开启 metacity 取代 deepin-wm，然后反复按 super+shift+tab 切换一下，就能看到半透明但无模糊效果。 恢复使用 deepin-metacity --no-composite --replace 解决eclipse图标状态栏、图标等显示过大的问题 问题描述：clipse打开后显得特别松散，状态栏、图标等显示过大 问题原因：Linux 的Eclipse默认使用GTK+2.0的控件，所以在默认的情况下，会和其他GTK应用程序（如OpenOffice.org）一样给人一种不够密实的感觉。 解决方法：找到~/.gtkrc-2.0，如果没有的话就新建一个，touch ~/.gtkrc-2.0，用记事本打开即可：gedit ~/.gtkrc-2.0，然后将下面复制到后面。 12345678910111213141516171819202122232425262728293031323334353637style &quot;gtkcompact&quot; &#123;font_name=&quot;Sans 9&quot;GtkButton::default_border=&#123;0,0,0,0&#125;GtkButton::default_outside_border=&#123;0,0,0,0&#125;GtkButtonBox::child_min_width=0GtkButtonBox::child_min_heigth=0GtkButtonBox::child_internal_pad_x=0GtkButtonBox::child_internal_pad_y=0GtkMenu::vertical-padding=1GtkMenuBar::internal_padding=0GtkMenuItem::horizontal_padding=4GtkToolbar::internal-padding=0GtkToolbar::space-size=0GtkOptionMenu::indicator_size=0GtkOptionMenu::indicator_spacing=0GtkPaned::handle_size=4GtkRange::trough_border=0GtkRange::stepper_spacing=0GtkScale::value_spacing=0GtkScrolledWindow::scrollbar_spacing=0GtkExpander::expander_size=10GtkExpander::expander_spacing=0GtkTreeView::vertical-separator=0GtkTreeView::horizontal-separator=0GtkTreeView::expander-size=8GtkTreeView::fixed-height-mode=TRUEGtkWidget::focus_padding=0&#125;class &quot;GtkWidget&quot; style &quot;gtkcompact&quot; style &quot;gtkcompactextra&quot; &#123;xthickness=1ythickness=1&#125;class &quot;GtkButton&quot; style &quot;gtkcompactextra&quot;class &quot;GtkToolbar&quot; style &quot;gtkcompactextra&quot;class &quot;GtkPaned&quot; style &quot;gtkcompactextra&quot; 添加程序图标 Deepin图标文件放在/usr/share/applications/下。建立程序图标其实就是新建一个.desktop文件 gedit /usr/share/applications/新程序.desktop 文件内容如下： [Desktop Entry] Type=Application Name=VMware-Install Exec=/usr/share/leanote/Leanote Icon=/usr/share/icons/hicolor/256x256/apps/leanote.png 其他参数可以参考其他图标文件设置 添加开启自启动 直接在/etc/rc.local文件中添加一行代码即可（如果没有这个文件手动创建即可 123/opt/openresty/bin/openrestyexit 0 添加启动服务 gedit /etc/init.d/zookeeper 文件内容： 1234567891011121314151617181920212223242526272829#!/bin/bash#chkconfig 345 20 90### BEGIN INIT INFO# Provides: zookeeper# Required-Start: $local_fs $remote_fs $network $syslog# Required-Stop: $local_fs $remote_fs $network $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: starts the zookeeper# Description: zookeeper start|stop|status|restart### END INIT INFO#description:zookeepercase $1 in start) su root /usr/local/zookeeper-3.4.9/bin/zkServer.sh start ;; stop) su root /usr/local/zookeeper-3.4.9/bin/zkServer.sh stop ;; status) su root /usr/local/zookeeper-3.4.9/bin/zkServer.sh status ;; restart) su root /usr/local/zookeeper-3.4.9/bin/zkServer.sh restart ;; *) echo &quot;repuire start|stop|status|restart&quot; ;;esac 简单介绍下文件结构： 第二行：启动暂停顺序（优先级），改不改随意 ###BEGIN 到 ###END 的行，是LSB信息，虽是注释形式，但必须有，把其中的zookeeper字样改掉即可。 case开头往下的行，是Shell脚本，随便写，能达到启停目的就可。 通过systemctl设置开机自启动： $ chmod 755 /etc/init.d/zookeeper $ systemctl enable zookeeper]]></content>
  </entry>
  <entry>
    <title><![CDATA[Oracle常见问题及其处理方法]]></title>
    <url>%2Fcontent%2F2018%2F01%2F16%2FOracle-%E5%88%97%E8%BD%AC%E8%A1%8C.html</url>
    <content type="text"><![CDATA[记录学习及其工作过程中遇到的问题及其解决方法，目前记录的问题：列转行、自定义排序 行转列pivot 函数： 语法： 123456select * from (...) pivot( sum(value) --这里需要使用聚合函数，要转为行的那一列 for object_type --行转列的标准，依据哪一列进行行转列 in (column) --列转行取值，转化为行后的列标题，并且依照写的顺序排序) 注：该函数是Oracle 11G提供的函数，所以Oracle 11G之前的版本不支持 业务需求，查询各地市订单数量： 原始SQL： 123SELECT TD.CITY_CODE, COUNT(1) CFROM TD_ORD TDGROUP BY TD.CITY_CODE; 显示结果： 123456789101112131415161718CITY_CODE COUNT(1)0532 85590539 53880531 69090634 6180538 14690546 13590632 17930530 22850535 29960536 71740631 18900534 40650543 24320633 32720537 49140635 37960533 3390 使用pivot函数实现列转行 123456SELECT *FROM (SELECT TD.CITY_CODE, COUNT(1) CFROM TD_ORD TDGROUP BY TD.CITY_CODE) T PIVOT(SUM(C) FOR CITY_CODE IN ('0530', '0531', '0532', '0533', '0534', '0535', '0536', '0537', '0538', '0539', '0543', '0546', '0631', '0632', '0633', '0634', '0635')) 实现效果： 12&apos;0530&apos; &apos;0531&apos; &apos;0532&apos; &apos;0533&apos; &apos;0534&apos; &apos;0535&apos; &apos;0536&apos; &apos;0537&apos; &apos;0538&apos; &apos;0539&apos; &apos;0543&apos; &apos;0546&apos; &apos;0631&apos; &apos;0632&apos; &apos;0633&apos; &apos;0634&apos; &apos;0635&apos;2285 6909 8559 3390 4065 2996 7174 4914 1469 5388 2432 1359 1890 1793 3272 618 3796 自定义排序order by decode()函数: 语法 12select * from ... order by (culumn,value1,1,value2,2...) 业务需求，查询各地市数据，根据地市名称按照一定顺序排列，避免了查询后，展示过程中排序问题 代码： 123SELECT TD.CITY_CODE,COUNT(1) FROM TD_ORD TDGROUP BY TD.CITY_CODEORDER BY DECODE(TD.CITY_CODE,'0530', 1,'0531', 2, '0532', 3, '0533', 4, '0534', 5, '0535' , 6, '0536', 7, '0537', 8, '0538', 9, '0539', 10, '0543', 11, '0546', 12, '0631', 13, '0632', 14, '0633', 15, '0634', 16, '0635' 17)]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown语法]]></title>
    <url>%2Fcontent%2F2018%2F01%2F05%2FMarkdown%E8%AF%AD%E6%B3%95-1.html</url>
    <content type="text"><![CDATA[Markdown：一种适应于网络的书写语言 标题语法在行首插入1到6个 #，对应标题1到6阶。 效果 # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 区块区块引用使用email形式的 &gt; 角括号 强调使用星号 * 和底线 _ 来标记需要强调的区段，两个效果相同 这行使用一个 *（斜体） 这行使用两个* （粗体） 这行使用一个 _（斜体） 这行使用两个_ （粗体） 列表无序列表语法 使用* 、+ 和 - 作为列表的项目标记，标记与文字之间需有一空格，效果相同 效果 星号列表 加号列表 减号列表 有序列表使用数字加一个英文句号作为项目标记 列表1 列表2 链接行内链接[] 里写链接文字，() 里写链接地址，() 中的&quot;&quot;中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的title文字。 语法 [链接文字](链接地址 &quot;链接标题&quot;) 效果 This is an example link This is an example.link 代码 This is an [example](http://example.com/)` This is an [example](http://example.com/ &quot;Title&quot;) ​ 参考链接一般用在学术论文上面，或者某一个链接在文章中多处使用，就可以对链接进行统一的管理 语法 [链接文字][链接标记] [链接标记]:链接地址 &quot;链接标题&quot; 注：如果链接文字本身可以作为链接标记，也可以写成 [链接标题][] [链接标题]:链接地址 效果 This is baidu 、google 、github 代码 This is [baidu][1] 、[google][google] 、[github][] [1]:http://www.baidu.com &quot;baidu&quot; [google]:http://www.google.com &quot;google&quot; [github]:http://www.github.com 自动链接以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是在 &lt;&gt; 中的就会自动转成链接。 效果 http://linpeilie.me 代码 &lt;http://linpeilie.me&gt; 图片图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。Alt：如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片Title：鼠标悬停于图片上时出现的文字,且位于图片下面注：Alt和Title都不是必须的，可以省略，但建议写上 行内式语法 ![图片Alt](图片地址 &quot;图片Title&quot;) 代码 ![头像](https://pic3.zhimg.com/50/v2-e2ae9159cf260da0ae61951bf1926abe_hd.jpg &quot;头像&quot;) 效果 参考式语法在文档要插入图片的地方写 ![图片Alt][标记] 在文档的最后写上 [标记]:图片地址 &quot;Title&quot; 代码 ![头像][avatar] [avatar]:https://pic3.zhimg.com/50/v2-e2ae9159cf260da0ae61951bf1926abe_hd.jpg &quot;头像&quot; 表格语法 不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。 列与列之间用管道符 | 隔开。原生方式的表格每一行的两边也要有管道符。 第二行还可以为不同的列指定对齐方向。默认为左对齐，在 - 右边加上 :就右对齐 简单方式代码 姓名|性别|分数 -|-|- 张三|男|75 李四|女|93 王五|男|83 效果 姓名 性别 分数 张三 男 75 李四 女 93 王五 男 83 如果向右对齐则将第二列改为-|-: 原生方式代码 |姓名|性别|分数| |-|-|-| |张三|男|75| |李四|女|93| |王五|男|83| 效果 姓名 性别 分数 张三 男 75 李四 女 93 王五 男 83 代码插入程序代码的方式有两种：一种是利用缩进(Tab)，另一种是利用引号 ` 来标记代码区段。注：缩进式插入前档必须有空行 行内式代码 Java中的`String`类 效果 Java中的String类 缩进式缩进4个空格或是1个制表符 public static void main(String[] args){ System.out.print(&quot;Hello World&quot;); } 代码高亮可以在代码前后加三个反引号 `，并在后面声明代码为哪种语言 代码 ``` javapublic static void main(String[] args){ System.out.print(“Hello World”);}``` language可以 效果 123public static void main(String[] args)&#123; System.out.print("Hello World");&#125; HTML原始码在代码区块里面，&amp;、&lt;和&gt;会自动转成HTML实体，这样可以在Markdown中比较方便的插入HTML原始码 代码 &lt;div class=&quot;footer&quot;&gt; © 2004 Foo Corporation &lt;/div&gt; 效果 © 2004 Foo Corporation 代码 &lt;table&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt; &lt;th&gt;星期一&lt;/th&gt; &lt;th&gt;星期二&lt;/th&gt; &lt;th&gt;星期三&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;王五&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 效果 值班人员 星期一 星期二 星期三 李强 张明 王平 转义在一些要正常显示其意义的符号前加\ 需要转义的字符 \ 反斜线` 反引号* 星号_ 底线{}花括号[] 方括号() 括号# 井号+ 加号- 减号. 英文句号! 感叹号]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fcontent%2F2017%2F12%2F29%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
